name: Build and Release APK

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME_17_X64: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Decode keystore
      run: echo ${{ secrets.KEYSTORE_BASE64 }} | base64 -d > my-release-key.jks

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build APK
      run: ./gradlew assembleRelease

    - name: Sign APK
      run: |
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
        -keystore my-release-key.jks \
        -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
        -keypass ${{ secrets.KEY_PASSWORD }} \
        app/build/outputs/apk/release/app-release-unsigned.apk ${{ secrets.KEY_ALIAS }}

    - name: Install zipalign
      run: sudo apt-get install -y zipalign

    - name: Align APK
      run: |
        zipalign -v 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release-signed-aligned.apk

    - name: List APK directory
      run: ls -R app/build/outputs/apk/release

    - name: Upload to GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: app/build/outputs/apk/release/app-release-signed-aligned.apk
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: "Automatically generated release from GitHub Actions"
        draft: false
        prerelease: false
